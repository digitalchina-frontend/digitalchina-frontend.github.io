import{_ as l,r as i,o as s,c as r,a as e,b as o,d as t,e as a}from"./app.cd040b68.js";const c="/assets/git-cz.6dca862f.png",d="/assets/emoji-log-vscode.a5819627.png",h={},u=a('<h1 id="contribute-to-matrix" tabindex="-1"><a class="header-anchor" href="#contribute-to-matrix" aria-hidden="true">#</a> Contribute to Matrix</h1><p>感谢您有兴趣为 Matrix 做贡献，我们很高兴您想加入这个社区。</p><p>Matrix 是由武汉云基地前端团队管理的开源项目，Matrix 致力于收集 2B 交付在小程序、中后台、数据可视化三个方向上的经典业务场景，分析每一个业务场景从需求分析到代码实现的过程中所涉及的必要知识，以最佳实践、解决方案文档、在线示例、可复用代码等形式，帮助前端开发者在尽可能短的时间内付出较少的学习成本产出高质量、可交付的代码，从而提升前端开发团队的效率。</p><p>欢迎所有形式的贡献，包括：贡献代码、贡献文档、贡献问题、提供业务场景、更新已有内容、帮助人们等等；通过为开源项目做贡献，您可以学习新技能、成为细分领域专家并将所有知识应用到您自己的项目中。</p><h2 id="如何贡献业务场景" tabindex="-1"><a class="header-anchor" href="#如何贡献业务场景" aria-hidden="true">#</a> 如何贡献业务场景</h2><p>贡献业务场景是帮助 Matrix 完善功能矩阵的首选方式，一个有价值的业务场景往往符合以下特点：</p><ul><li>实现前需要查阅资料或参考他人代码</li><li>编码过程中频繁踩坑</li><li>测试人员集中报告 bug 的业务功能</li></ul><p>如果您有这样的经历，您可以通过适当的方式贡献业务场景：</p>',8),p={href:"https://doc.weixin.qq.com/sheet/e3_AAIAhAYhAL8EwM3EqSvRFavznf5fA?scode=AGEA5AcDAAok6EZiqqAAIAhAYhAL8&tab=BB08J2&journal_source=chat&roomid=Room%3A53330857886161&open_source=wecomgroup&version=4.1.0.6011&platform=win",target:"_blank",rel:"noopener noreferrer"},_=e("p",null,"我们的团队成员会根据您填写的内容进行讨论，必要时会联系您以获取更详细的信息",-1),m=e("li",null,[e("p",null,"方式二：在 Github 仓库创建 Issue，对于一个业务场景，请在您的 Issue 中包含："),e("ul",null,[e("li",null,"行业背景"),e("li",null,"业务场景描述"),e("li",null,"您当前采用的解决方案（可选） 每个 issue 在开始 PR 之前会进行充分的讨论和设计，我们会尽最大努力尽快做出回应。")])],-1),b=e("h2",{id:"如何提交-pull-request-pr",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#如何提交-pull-request-pr","aria-hidden":"true"},"#"),o(" 如何提交 Pull Request (PR)")],-1),E=e("p",null,"为开源做出贡献的很大一部分是提交对该项目的更改，比如对源代码的改进、对文档内容的更新，甚至是对拼写错误和过期链接的修复。",-1),g=e("h3",{id:"什么是-pr",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#什么是-pr","aria-hidden":"true"},"#"),o(" 什么是 PR ？")],-1),f={href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests",target:"_blank",rel:"noopener noreferrer"},k=e("blockquote",null,[e("p",null,"拉取请求让您可以告诉其他人您已推送到 GitHub 存储库分支中的更改。打开拉取请求后，您可以与协作者讨论和审查潜在的影响，并在您的更改合并到主分支之前添加后续提交。")],-1),R=e("p",null,"任何人都可以发起 PR，所有的贡献者都遵循相同的过程，无论是来自团队内部还是开源贡献者。",-1),v=e("p",null,"如果您要解决的问题还没有相关的 issue，我们通常建议在提出 PR 之前打开一个 issue，这有助于在实施之前进行讨论，如果您的 PR 改动较小，比如修复错别字或修复链接，直接提出 PR 可能比较合适。",-1),A=e("h3",{id:"贡献前的准备",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#贡献前的准备","aria-hidden":"true"},"#"),o(" 贡献前的准备")],-1),x={href:"https://nodejs.org/zh-cn/",target:"_blank",rel:"noopener noreferrer"},I={href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"},G=e("h4",{id:"关于-commitlint",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#关于-commitlint","aria-hidden":"true"},"#"),o(" 关于 CommitLint")],-1),M={href:"https://github.com/ahmadawais/Emoji-Log#philosophy",target:"_blank",rel:"noopener noreferrer"},P=e("code",null,"commitlint",-1),S=a(`<ol><li><code>📦 NEW: IMPERATIVE_MESSAGE_GOES_HERE</code><blockquote><p>当您添加全新的内容时使用。例如 📦 NEW: Add Git ignore file</p></blockquote></li><li><code>👌 IMPROVE: IMPERATIVE_MESSAGE_GOES_HERE</code><blockquote><p>当您改进/增强代码片段（如重构等）时使用。例如 👌 IMPROVE: Remote IP API Function</p></blockquote></li><li><code>🐛 FIX: IMPERATIVE_MESSAGE_GOES_HERE</code><blockquote><p>修复错误时使用 例如 🐛 FIX: Case conversion</p></blockquote></li><li><code>📖 DOC: IMPERATIVE_MESSAGE_GOES_HERE</code><blockquote><p>当您添加文档（如 README.md，甚至内联文档）时使用。例如 📖 DOC: API Interface Tutorial</p></blockquote></li><li><code>🚀 RELEASE: IMPERATIVE_MESSAGE_GOES_HERE</code><blockquote><p>发布新版本时使用。例如 🚀 RELEASE: Version 2.0.0</p></blockquote></li><li><code>🤖 TEST: IMPERATIVE_MESSAGE_GOES_HERE</code><blockquote><p>与测试相关时使用。例如 🤖 TEST: Mock User Login/Logout</p></blockquote></li><li><code>‼️ BREAKING: IMPERATIVE_MESSAGE_GOES_HERE</code><blockquote><p>在发布不向下兼容的更改时使用。例如‼️ BREAKING: Change authentication protocol</p></blockquote></li></ol><p>您不必在每次提交时手动输入表情符号，我们提供两种方式帮助您构建提交消息：</p><h5 id="命令行" tabindex="-1"><a class="header-anchor" href="#命令行" aria-hidden="true">#</a> 命令行</h5><p>运行以下命令，使用 <code>git-cz</code> 工具帮助构建提交消息、添加详细描述以及关联 issue：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run commit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+c+'" alt="git-cz"></p><h5 id="安装-vscode-插件" tabindex="-1"><a class="header-anchor" href="#安装-vscode-插件" aria-hidden="true">#</a> 安装 VSCode 插件</h5>',7),q={href:"https://marketplace.visualstudio.com/items?itemName=ahmadawais.emoji-log-vscode",target:"_blank",rel:"noopener noreferrer"},w=e("p",null,"重新启动 VSCode 后，进入源代码管理模块，点击 Emoji Log 图标，选择一个提交类型即可：",-1),V=e("p",null,[e("img",{src:d,alt:"emoji-log-vscode"})],-1),O=e("h4",{id:"准备本地开发环境",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#准备本地开发环境","aria-hidden":"true"},"#"),o(" 准备本地开发环境")],-1),T={href:"https://docs.npmjs.com/cli/v7/using-npm/workspaces",target:"_blank",rel:"noopener noreferrer"},L=e("h5",{id:"fork-clone-and-branch-the-repository",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fork-clone-and-branch-the-repository","aria-hidden":"true"},"#"),o(" Fork, clone, and branch the repository")],-1),N={href:"https://github.com/digitalchina-frontend",target:"_blank",rel:"noopener noreferrer"},C=e("li",null,[o("拉取代码："),e("code",null,"git clone https://github.com/<your-username>/matrix-miniapp.git")],-1),H=e("li",null,[o("安装依赖包："),e("code",null,"npm install")],-1),j=e("li",null,[o("创建主题分支："),e("code",null,"git checkout -b topics/new-feature-name")],-1),B={href:"https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html",target:"_blank",rel:"noopener noreferrer"},y=e("code",null,"apps/wechat",-1),F=e("li",null,[o("中后台： "),e("ul",null,[e("li",null,[o("启动所有包："),e("code",null,"npm run dev")]),e("li",null,[o("限制在单个包："),e("code",null,"npm run dev -w @ma/package-name")])])],-1),z=a(`<h3 id="验证并提交" tabindex="-1"><a class="header-anchor" href="#验证并提交" aria-hidden="true">#</a> 验证并提交</h3><p>在您完成修改后，请运行以下命令检查所修改的内容是否有存在潜在风险：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run release:check
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果脚本没有抛出错误，请提交您的改动（通过命令行或者 VSCode 源代码管理工具）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">npm</span> run commit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="发起-pr" tabindex="-1"><a class="header-anchor" href="#发起-pr" aria-hidden="true">#</a> 发起 PR</h3><p>在为 Matrix 发起 PR 时，您需要遵循一些约定：</p>`,7),D={href:"https://www.atlassian.com/git/tutorials/git-forks-and-upstreams",target:"_blank",rel:"noopener noreferrer"},U={href:"https://github.com/ahmadawais/Emoji-Log#philosophy",target:"_blank",rel:"noopener noreferrer"},J=e("li",null,"填写 PR 模板（描述、改动的类型、检查清单）",-1),K=e("h3",{id:"跟进-pr",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#跟进-pr","aria-hidden":"true"},"#"),o(" 跟进 PR")],-1),W=e("p",null,"将 PR 发送到 GitHub 存储库后，Matrix 团队可能会对您的 PR 进行审阅并提出修改建议。",-1),X=e("p",null,"如果您收到了我们的修改请求，您可以在 PR 合并前继续向 PR 添加相关提交，这些提交也将成为此 PR 的一部分。",-1),Y=e("p",null,"在解决了所有问题并提交了请求的更改后，您可以将对话标记为已解决。",-1),Z=e("p",null,"此过程有助于 Matrix 团队在将更改合并到 Matrix GitHub 存储库之前做出改进。",-1);function Q($,ee){const n=i("ExternalLinkIcon");return s(),r("div",null,[u,e("ul",null,[e("li",null,[e("p",null,[o("方式一：通过"),e("a",p,[o("在线表格"),t(n)]),o("填写业务场景的相关信息（首选）：")]),_]),m]),b,E,g,e("p",null,[o("如果您不了解，这里是 GitHub 上人们对它的"),e("a",f,[o("定义"),t(n)]),o("：")]),k,R,v,A,e("ul",null,[e("li",null,[o("您安装了 >= v15 和 <= v18 的 "),e("a",x,[o("Node.js"),t(n)])]),e("li",null,[o("您安装了 "),e("a",I,[o("Git"),t(n)]),o(" 并熟悉基础用法")])]),G,e("p",null,[o("为了规范提交格式，我们使用了 "),e("a",M,[o("EMOJI-LOG"),t(n)]),o(" 作为 Git 提交消息的标准并启用了 "),P,o(" 帮助团队遵守提交约定，请仅使用以下 Git 提交消息：")]),S,e("p",null,[o("插件链接："),e("a",q,[o("Emoji-Log for VSCode"),t(n)])]),w,V,O,e("p",null,[o("Matrix 使用“monorepo”模式来管理它的文档网站、各个技术栈的源代码以及它的许多依赖，并依赖 "),e("a",T,[o("npm workspaces"),t(n)]),o(" 统一本地文件系统中的多个子包。")]),L,e("ul",null,[e("li",null,[o("Fork "),e("a",N,[o("digitalchina-frontend"),t(n)]),o(" 组织下对应方向的官方仓库")]),C,H,j,e("li",null,[o("在开发模式下运行项目： "),e("ul",null,[e("li",null,[o("微信小程序：下载并打开"),e("a",B,[o("微信开发者工具"),t(n)]),o(" -> 导入项目 -> 选择项目根目录下 "),y,o(" 作为要上传的文件夹 -> 点击直接打开")]),F])])]),z,e("ul",null,[e("li",null,[o("保持你的仓库是最新版本： 在发起 PR 前检查本地仓库是否落后于上游仓库以避免合并冲突，如何同步上游仓库请参阅："),e("a",D,[o("Git Forks and Upstreams: How-to and a cool tip"),t(n)])]),e("li",null,[o("参考 "),e("a",U,[o("EMOJI-LOG"),t(n)]),o(" 的标准提供一个符合格式的 PR 标题")]),J]),K,W,X,Y,Z])}const ne=l(h,[["render",Q],["__file","CONTRIBUTING.html.vue"]]);export{ne as default};
