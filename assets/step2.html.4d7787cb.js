import{_ as e,r as o,o as c,c as l,a as s,b as n,d as t,e as p}from"./app.cd040b68.js";const i="/images/number-scroll/static.png",u="/images/number-scroll/dynamic-number.gif",r="/images/number-scroll/infinite-scroll.gif",k="/images/number-scroll/blur.gif",d="/images/number-scroll/stop.gif",v="/images/number-scroll/stop1.gif",m={},b=p(`<h1 id="_2-实现单个数字的滚动效果" tabindex="-1"><a class="header-anchor" href="#_2-实现单个数字的滚动效果" aria-hidden="true">#</a> 2. 实现单个数字的滚动效果</h1><h2 id="_2-1-动画分析" tabindex="-1"><a class="header-anchor" href="#_2-1-动画分析" aria-hidden="true">#</a> 2.1 动画分析</h2><ul><li>首先，HTML 元素应该由两部分组成：一个宽高固定并隐藏溢出部分的舞台、一个从 0 到 9 的数字列表，不停移动数字列表即可实现基础的数字滚动效果；</li><li>在大部分场景下，需要让用户产生数字滚动速度快到模糊的感觉，可以给滚动中的数字加上一层模糊滤镜，在滚动时间结束后再撤除；</li><li>在滚动时间结束后，需要将特定的数字显示到舞台正中的位置，为了制造一种自然滚动直至停下的感觉，这里有两种做法： <ul><li>视图驱动：将动画时间分为两个部分，第一个部分将数字列表滚动 <code>n</code> 圈,第二部分从当前位置缓慢滚动至目标数字，在这整个过程中，数字的滚动速度应该是从一个精准计算的初始速度不断递减直至为零的。</li><li>数据驱动：预留一个较短的时间播放收尾的动画，用较长的时间以恒定的、较快的速度无限滚动列表，时间到后，不论列表目前滚动到哪个位置，立即将列表移动到目标数字附近并播放一个收尾动画。</li></ul></li></ul><h2 id="_2-2-准备静态的-html-元素" tabindex="-1"><a class="header-anchor" href="#_2-2-准备静态的-html-元素" aria-hidden="true">#</a> 2.2 准备静态的 HTML 元素</h2><ul><li>准备舞台和数字列表：</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token function-variable function">NumberScrollItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> index<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number-scroll__stage<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number-scroll__gimmick <span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span>numbers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">uuidV4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>number<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+i+'" alt="static"></p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>这里我们在 0~9 的末尾额外添加了一个 0 ，这样做的目的是让列表从尾部（显示数字 9）切换到头部（显示数字 0）的过程不那么生硬。</p></div><h2 id="_2-3-让数字列表滚动起来" tabindex="-1"><a class="header-anchor" href="#_2-3-让数字列表滚动起来" aria-hidden="true">#</a> 2.3 让数字列表滚动起来</h2>',9),g=s("code",null,"GSAP API",-1),_={href:"https://greensock.com/docs/v3/GSAP/gsap.fromTo()",target:"_blank",rel:"noopener noreferrer"},f=s("code",null,"fromVars",-1),h=s("code",null,"toVars",-1),y=s("code",null,"duration",-1),x=s("code",null,"gsap",-1),S=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token constant">COUNT_OF_NUMBERS</span> <span class="token operator">=</span> <span class="token number">10</span> <span class="token comment">// 隐藏在舞台外的数字个数</span>
<span class="token keyword">const</span> <span class="token constant">HEIGHT_PER_NUMBER</span> <span class="token operator">=</span> <span class="token number">32</span> <span class="token comment">// 每个数字所占高度</span>
<span class="token keyword">const</span> <span class="token constant">ONE_LAP</span> <span class="token operator">=</span> <span class="token constant">HEIGHT_PER_NUMBER</span> <span class="token operator">*</span> <span class="token constant">COUNT_OF_NUMBERS</span> <span class="token comment">// 列表滚动一圈的位移</span>

<span class="token keyword">const</span> <span class="token function-variable function">useNumberScroll</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dependencies <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token function-variable function">animate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> gimmicSelector <span class="token operator">=</span> <span class="token string">&#39;.number-scroll__gimmick&#39;</span>
    gsap<span class="token punctuation">.</span><span class="token function">fromTo</span><span class="token punctuation">(</span>
      gimmicSelector<span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token constant">ONE_LAP</span><span class="token punctuation">,</span>
        <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
        <span class="token literal-property property">ease</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">useGSAP</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    animate<span class="token punctuation">,</span>
    ref<span class="token punctuation">,</span>
    dependencies<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> ref
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">NumberScrollItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token function">useNumberScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number-scroll__stage<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span><span class="token comment">/* ... */</span><span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p><code>useGSAP</code> 是基于 <code>useLayoutEffect</code> 封装的 <code>hook</code>：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token function-variable function">useGSAP</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> animate<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> dependencies <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">useLayoutEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> ctx <span class="token operator">=</span> gsap<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span>animate<span class="token punctuation">,</span> ref<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      ctx<span class="token punctuation">.</span><span class="token function">revert</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> dependencies<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>gsap.context</code> 指定了动画的上下文，在 <code>animate</code> 函数中书写的选择器都将作用于指定的元素范围内，并且其中出现的所有 <code>gsap animation</code> 都可以通过 <code>ctx.revert()</code> 或 <code>ctx.kill()</code> 统一重置或销毁，而无需手动跟踪一堆变量、数组。</p></div><p><img src="`+u+`" alt="dynamic-number"></p><h2 id="_2-4-让数字列表可以无限滚动" tabindex="-1"><a class="header-anchor" href="#_2-4-让数字列表可以无限滚动" aria-hidden="true">#</a> 2.4 让数字列表可以无限滚动</h2><p><code>repeat</code> 属性可以控制动画重复的次数，<code>-1</code> 代表无限次。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token function-variable function">animate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  gsap<span class="token punctuation">.</span><span class="token function">fromTo</span><span class="token punctuation">(</span>
    gimmicSelector<span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token constant">ONE_LAP</span><span class="token punctuation">,</span>
      <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
      <span class="token literal-property property">ease</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">repeat</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 无限重复</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>duration 表示每一次的动画时间，而不是总的动画时间</p></div><p><img src="`+r+'" alt="infinite-scroll"></p><h2 id="_2-5-给滚动中的数字加上一层模糊滤镜" tabindex="-1"><a class="header-anchor" href="#_2-5-给滚动中的数字加上一层模糊滤镜" aria-hidden="true">#</a> 2.5 给滚动中的数字加上一层模糊滤镜</h2><p>为了让数字在滚动的过程中给用户一种滚动得非常快的感觉，我们需要设置一个较大的滚动速度，并且给滚动中的数字加上一层高斯模糊。</p>',10),w=p("<li><p>如何控制运动速度<br><code>gsap</code> 的运动速度取决于我们传入的位移 <code>y</code> 和时间 <code>duration</code>，相当于：<code>speed = y / duration</code>，在 <code>y</code> 确定的情况下，计算一个 <code>duration</code> 传给 <code>gsap</code> 即可。</p></li>",1),E={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter#filter_%E5%87%BD%E6%95%B0",target:"_blank",rel:"noopener noreferrer"},N=s("br",null,null,-1),T=s("code",null,"blur()",-1),A=s("code",null,"filter: blur(1px)",-1),j=s("code",null,"1px",-1),P={href:"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Element/feGaussianBlur",target:"_blank",rel:"noopener noreferrer"},I=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token function-variable function">getScrollSpeed</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">320</span> <span class="token comment">// 设置一个较快的速度即可，单位：px / s</span>
<span class="token keyword">const</span> <span class="token function-variable function">getDuration</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> s <span class="token operator">/</span> v <span class="token comment">// 时间 = 位移 / 速度</span>

<span class="token keyword">const</span> <span class="token function-variable function">animate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  gsap<span class="token punctuation">.</span><span class="token function">fromTo</span><span class="token punctuation">(</span>
    gimmicSelector<span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token constant">ONE_LAP</span><span class="token punctuation">,</span>
      <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token function">getDuration</span><span class="token punctuation">(</span><span class="token constant">ONE_LAP</span><span class="token punctuation">,</span> <span class="token function">getScrollSpeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">ease</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">repeat</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 无限重复</span>
      <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 添加模糊滤镜</span>
        gsap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>gimmicSelector<span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token string">&#39;blur(1px)&#39;</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+k+'" alt="blur"></p><h2 id="_2-6-让数字列表停止滚动" tabindex="-1"><a class="header-anchor" href="#_2-6-让数字列表停止滚动" aria-hidden="true">#</a> 2.6 让数字列表停止滚动</h2><p>在做 <a href="#_2-1-%E5%8A%A8%E7%94%BB%E5%88%86%E6%9E%90">动画分析</a> 时，我们提到了缓慢停下和急停两种停止滚动的做法，这里我们都尝试一下。</p><h3 id="视图驱动" tabindex="-1"><a class="header-anchor" href="#视图驱动" aria-hidden="true">#</a> 视图驱动</h3><p>缓慢停下是个很符合现实逻辑的做法，整个运动过程相当于一个匀减速直线运动。</p><p>要让数字在指定的时间正好滚动至指定位置并停下，我们就需要设定一个初始速度和负的加速度，使运动结束时速度正好等于零；并且总位移在减去从初始值滚至目标值的部分后，必须是滚动一圈的整数倍，否则停止的位置就会偏离我们的目标值。</p><p>下面我们用公式梳理下上述条件：</p><p>假设初始速度为 <code>Vο</code>，加速度为 <code>a</code>，总位移为 <code>s</code>，运动时间为 <code>t</code>，至少需要位移的距离为 <code>S1</code>，数字滚动一圈的距离为 <code>S2</code>，则：</p><ol><li>指定时间后停下：<code>Vο + at = 0</code>；</li><li>停下时总位移减去必要的位移正好是滚动一圈的整数倍：<code>(s - S1) % S2 = 0</code>；</li><li>带入位移公式 <code>s = Vοt + at² / 2</code> 可以得到：<code>(Vοt / 2 - S1) % S2 = 0</code>。</li></ol><p>其中，<code>S2</code> 是常量，<code>t</code> 和 <code>S1</code> 是已知的，求 <code>Vο</code> 的解，显然 <code>Vο</code> 不止一个解，选择一个较大的速度作为初始运动速度即可。</p><p>在确定 <code>Vο</code> 后，带入 <code>a = -(Vο / t)</code> 即可算出对应的加速度。</p><p>这一做法确实是可行的，但是显而易见，这种做法会极大增加我们代码的实现难度，而且很难满足一些常见的需求，比如多位数的滚动速度保持一致（因为每个数字的 <code>S1</code> 都不相同）。</p><h3 id="数据驱动" tabindex="-1"><a class="header-anchor" href="#数据驱动" aria-hidden="true">#</a> 数据驱动</h3><p>与缓慢停下的做法相比，急停的做法无疑简单许多：</p>',15),G=s("li",null,[n("设定一个播放收尾动画的时间，比如总时长的 "),s("code",null,"75%"),n(" 播放无限滚动，"),s("code",null,"25%"),n(" 播放收尾动画；")],-1),V=s("code",null,"onUpdate",-1),q={href:"https://greensock.com/docs/v3/GSAP/Tween/pause()",target:"_blank",rel:"noopener noreferrer"},B=s("li",null,[n("为 "),s("code",null,"NumberScrollItem"),n(" 绑定一个 "),s("code",null,"data-value"),n(" 属性，表示最后滚动到哪个数字；")],-1),O=s("li",null,"撤除滤镜；",-1),R={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/dataset",target:"_blank",rel:"noopener noreferrer"},C={href:"https://greensock.com/docs/v3/Eases",target:"_blank",rel:"noopener noreferrer"},L=s("code",null,"elastic.out()",-1),D={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/animation-timing-function",target:"_blank",rel:"noopener noreferrer"},H={class:"custom-container tip"},M=s("p",{class:"custom-container-title"},"提示",-1),U=s("code",null,"this",-1),z={href:"https://greensock.com/docs/v3/GSAP/Tween/",target:"_blank",rel:"noopener noreferrer"},W=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token function-variable function">NumberScrollItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token function">useNumberScroll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number-scroll__stage<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number-scroll__gimmick<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span><span class="token comment">/* ... */</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token constant">ENDING_ANIMATION_PERCENT</span> <span class="token operator">=</span> <span class="token number">0.25</span> <span class="token comment">// 收尾动画的时间占比</span>

<span class="token keyword">const</span> <span class="token function-variable function">useNumberScroll</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> duration <span class="token punctuation">}</span><span class="token punctuation">,</span> dependencies <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> startTime <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 用于控制无限滚动的时间</span>
  <span class="token keyword">const</span> endingDuration <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">[</span>duration <span class="token operator">*</span> <span class="token constant">ENDING_ANIMATION_PERCENT</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 收尾动画最多播放 2 秒</span>
  <span class="token keyword">const</span> loopDuration <span class="token operator">=</span> duration <span class="token operator">-</span> endingDuration

  <span class="token keyword">const</span> <span class="token function-variable function">endAnimate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 停止无限滚动</span>
    ctx<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> ele <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">targets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token comment">// 获取目标数字的值</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token operator">+</span>ele<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>value
    <span class="token keyword">const</span> valueOffset <span class="token operator">=</span> value <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">10</span> <span class="token operator">:</span> value
    <span class="token comment">// 撤除滤镜</span>
    gsap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 播放一个从目标数字上方滚动至目标数字的动画</span>
    gsap<span class="token punctuation">.</span><span class="token function">fromTo</span><span class="token punctuation">(</span>
      ele<span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span>valueOffset <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token constant">HEIGHT_PER_NUMBER</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 目标数字的上一个数字</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token punctuation">(</span>valueOffset <span class="token operator">*</span> <span class="token constant">HEIGHT_PER_NUMBER</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">duration</span><span class="token operator">:</span> endingDuration<span class="token punctuation">,</span>
        <span class="token literal-property property">ease</span><span class="token operator">:</span> <span class="token string">&#39;elastic.out(1, 0.3)&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">animate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    gsap<span class="token punctuation">.</span><span class="token function">fromTo</span><span class="token punctuation">(</span>
      gimmicSelector<span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          startTime<span class="token punctuation">.</span>current <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">onUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> isEnd <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> startTime<span class="token punctuation">.</span>current <span class="token operator">&gt;=</span> loopDuration <span class="token operator">*</span> <span class="token number">1000</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>isEnd<span class="token punctuation">)</span> <span class="token function">endAnimate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+d+'" alt="stop"><img src="'+v+'" alt="stop1"></p>',2);function F(J,K){const a=o("ExternalLinkIcon");return c(),l("div",null,[b,s("p",null,[n("这里用到的 "),g,n(" 是 "),s("a",_,[n("gsap.fromTo()"),t(a)]),n("，只需指定 "),f,n("（动画的起始属性）、"),h,n("（动画的目标属性）和 "),y,n(" 即可让 "),x,n(" 补齐中间的动画过程，完成一个基础的滚动效果。")]),S,s("ul",null,[w,s("li",null,[s("p",null,[n("高斯模糊（利用 "),s("a",E,[n("CSS filter"),t(a)]),n(" 属性实现）"),N,n(" 通常，我们可以简单地使用 "),T,n(" 函数产生高斯模糊，比如："),A,n("，这里的 "),j,n(" 指定了 "),s("a",P,[n("SVG 滤镜 feGaussianBlur"),t(a)]),n(" 的标准差。")])])]),I,s("ol",null,[G,s("li",null,[n("通过 "),V,n("（每次动画更新时触发）和 "),s("a",q,[n("this.pause()"),t(a)]),n(" 控制无限滚动的时间；")]),B,s("li",null,[n("停止无限滚动后： "),s("ol",null,[O,s("li",null,[n("通过 "),s("a",R,[n("HTMLElement.dataset"),t(a)]),n(" 获取目标数字的值；")]),s("li",null,[n("用剩下的时间播放一个从目标数字上方滚动至目标数字的动画，使用 "),s("a",C,[n("gsap Eases"),t(a)]),n(" 中内置的时间函数 "),L,n("（ 类似于 "),s("a",D,[n("CSS animation-timing-function"),t(a)]),n("）使动画效果更有弹性。")])])])]),s("div",H,[M,s("p",null,[n("第 2 步提到的 "),U,n(" 对应一个 "),s("a",z,[n("Tween"),t(a)]),n("，可以简单地把它理解为一个高性能的属性设置器。")])]),W])}const X=e(m,[["render",F],["__file","step2.html.vue"]]);export{X as default};
