import{_ as o,r as p,o as c,c as i,a as n,b as s,d as t,e}from"./app.cd040b68.js";const l={},u=n("h1",{id:"基于-echarts-实现离线地图下钻动画",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#基于-echarts-实现离线地图下钻动画","aria-hidden":"true"},"#"),s(" 基于 Echarts 实现离线地图下钻动画")],-1),r=n("h2",{id:"source-demo",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#source-demo","aria-hidden":"true"},"#"),s(" Source & Demo")],-1),d=n("br",null,null,-1),k=n("iframe",{style:{border:"1px solid rgba(0, 0, 0, 0.1)","border-radius":"2px"},width:"800",height:"450",src:"https://codesandbox.io/p/sandbox/xia-zuan-hui-su-wan-zheng-ban-x3pklh?embed=1",allowfullscreen:""},null,-1),h=n("h2",{id:"开始之前",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开始之前","aria-hidden":"true"},"#"),s(" 开始之前")],-1),b=n("p",null,"你可能需要了解：",-1),m={href:"https://echarts.apache.org/handbook/zh/get-started",target:"_blank",rel:"noopener noreferrer"},v={href:"https://zh.wikipedia.org/wiki/%E5%9C%B0%E7%90%86%E5%9D%90%E6%A0%87%E7%B3%BB",target:"_blank",rel:"noopener noreferrer"},g={href:"https://zh.wikipedia.org/zh-cn/GeoJSON",target:"_blank",rel:"noopener noreferrer"},_=n("h2",{id:"准备工作",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#准备工作","aria-hidden":"true"},"#"),s(" 准备工作")],-1),f=n("p",null,"要使用 echarts 绘制地图，就必须给 echarts 提供一个 GeoJSON，GeoJSON 可以理解为一个包含了地名、边界线和一堆经纬度的树形结构。",-1),x=n("p",null,"本文演示湖北省地图下钻，因此需获取湖北省以及省内市级、县级行政区划的 GeoJSON，免费获取 GeoJSON 的途径包括但不限于：",-1),y={href:"http://datav.aliyun.com/portal/school/atlas/area_selector#&lat=37.502671988384854&lng=107.40368932006544&zoom=4.5",target:"_blank",rel:"noopener noreferrer"},w={href:"https://geojson.hxkj.vip/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://malagis.com/gis-tutorial-get-amap-online-geojson.html",target:"_blank",rel:"noopener noreferrer"},O=n("h2",{id:"怎么用-geojson-渲染地图",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#怎么用-geojson-渲染地图","aria-hidden":"true"},"#"),s(" 怎么用 GeoJSON 渲染地图？")],-1),j=n("li",null,"引入 ecahrts 并创建地图容器",-1),S={href:"https://echarts.apache.org/zh/api.html#echarts.registerMap",target:"_blank",rel:"noopener noreferrer"},L=n("li",null,"使用已注册地图作为地理坐标系并给底图上色",-1),G=n("p",null,"示例如下：",-1),J=n("iframe",{style:{border:"1px solid rgba(0, 0, 0, 0.1)","border-radius":"2px"},width:"800",height:"450",src:"https://codesandbox.io/p/sandbox/zen-me-yong-geojson-xuan-ran-di-tu-6czdxh?embed=1",allowfullscreen:""},null,-1),N=n("p",null,"此时，我们的地图上已经渲染出了湖北省内所有的市级行政区划，接下来，我们尝试在点击后渲染对应城市的地图（后面统称为“下级地图”）。",-1),E=n("h2",{id:"点击某个区域怎么渲染下级地图",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#点击某个区域怎么渲染下级地图","aria-hidden":"true"},"#"),s(" 点击某个区域怎么渲染下级地图？")],-1),z=n("li",null,"给 echarts 地图实例绑定点击事件",-1),A=n("li",null,[s("事件处理函数的第一个参数为 "),n("code",null,"params"),s("，可以通过 "),n("code",null,"params.name"),s(" 取到被点击区域的名称，通过名称可以计算出下级地图应该用哪个行政区划的 GeoJSON")],-1),B={href:"https://echarts.apache.org/zh/api.html#echartsInstance.setOption",target:"_blank",rel:"noopener noreferrer"},P=n("p",null,"示例如下，点击武汉可渲染武汉市地图，点击洪山区可渲染洪山区地图，其他地区不做演示：",-1),I=n("iframe",{style:{border:"1px solid rgba(0, 0, 0, 0.1)","border-radius":"2px"},width:"800",height:"450",src:"https://codesandbox.io/p/sandbox/dian-ji-mou-ge-qu-yu-zen-me-xuan-ran-xia-yi-ji-di-tu-cdhw7w?embed=1",allowfullscreen:""},null,-1),F=n("h2",{id:"下钻后在展示下级地图的同时-怎么展示周边地区",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#下钻后在展示下级地图的同时-怎么展示周边地区","aria-hidden":"true"},"#"),s(" 下钻后在展示下级地图的同时，怎么展示周边地区？")],-1),D=n("ol",null,[n("li",null,"echarts 支持在一个容器内配置多个地理坐标系，也就可以渲染多个地图的底图，并且可以叠加"),n("li",null,"我们配置两个地理坐标系，分别为 L1，L2，L1 用于渲染湖北省地图，L2 用于渲染市级、和区县级地图"),n("li",null,"L1、L2 初始都使用湖北省的 GeoJSON，L1 的 zLevel 为 1，L2 的 zLevel 为 2"),n("li",null,"这时在界面上只会看到一个湖北省地图，L2 叠加在了 L1 上方"),n("li",null,"点击事件触发后，用新注册的 GeoJSON 更新 L2，达到同时渲染两级地图的效果")],-1),q=n("p",null,"示例如下：",-1),M=n("iframe",{style:{border:"1px solid rgba(0, 0, 0, 0.1)","border-radius":"2px"},width:"800",height:"450",src:"https://codesandbox.io/p/sandbox/chu-liao-xian-shi-xia-yi-ji-di-tu-huan-xi-wang-kan-dao-zhou-bian-di-qu-zen-me-tong-shi-xuan-ran-liang-ji-di-tu-k5g969?embed=1",allowfullscreen:""},null,-1),V=n("h2",{id:"两层地图是割裂的-怎么让它们显得完整",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#两层地图是割裂的-怎么让它们显得完整","aria-hidden":"true"},"#"),s(" 两层地图是割裂的，怎么让它们显得完整？")],-1),T=n("p",null,"首先，我们需要找到是什么导致了两层地图的割裂。",-1),Q=n("p",null,"先说结论：L1、L2 两个地理坐标系的逻辑坐标转像素坐标的转化比例的不一致，导致了两层地图的割裂，下面分析原因：",-1),Y=n("h3",{id:"原因分析",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#原因分析","aria-hidden":"true"},"#"),s(" 原因分析")],-1),U={href:"https://echarts.apache.org/zh/option.html#geo.boundingCoords",target:"_blank",rel:"noopener noreferrer"},Z=e('<p>简单来理解，这个属性代表了一个矩形区域，单位是经纬度，其形式为这个矩形区域左上角和右下角两点的经纬度坐标，比如 <code>boundingCoords: [[30,60],[120,0]]</code> 表示一个如下的矩形区域：</p><p><img src="https://i.imgur.com/8J32QYZ.png" alt="8J32QYZ"></p><p>这一属性表示你希望 echarts 将地理坐标系中的哪一区域渲染到我们的地图容器中，也就是说，我们不一定要将整个 GeoJSON 表示的经纬度范围全部渲染到地图容器中，而是可以只渲染一部分。</p><p>这个属性的默认值就是将整个 GeoJSON 表示的经纬度范围全部渲染到地图容器中，那么，在我们为 L1、L2 两个图层设置了不同的 GeoJSON 时：</p><ol><li>L1、L2 对应 GeoJSON 的经纬度范围不同</li><li>这导致 L1、L2 的 <code>boundingCoords</code> 默认值不同。以湖北省下钻武汉市为例，L1 为湖北省的经纬度范围，L2 为武汉市的经纬度范围</li><li>L1、L2 使用的地图容器大小相同，但是展示的经纬度范围却不同，这势必导致 echarts 在将 L1、L2 的经纬度坐标转化为像素坐标时，转化的比例不同</li><li>由于 L1、L2 使用的 GeoJSON 代表的都是真实世界的经纬度数据，这些坐标点决定了武汉市能够和相邻市无缝地拼接在一起，但是当经纬度坐标经过不同的转化比例变成像素坐标后，它们原本的比例平衡就被破坏了</li><li>比如原本武汉市和鄂州市的边界里都有 <code>[113.710002, 30.388924]</code> 这一点，但在乘以不同的乘数变成像素坐标后，它们就不再是同一点了，因此才显得割裂</li></ol><h3 id="方案" tabindex="-1"><a class="header-anchor" href="#方案" aria-hidden="true">#</a> 方案</h3><p>同步 L1、L2 展示的经纬度范围，从而同步其逻辑坐标和像素坐标的转化比例，以解决地图割裂问题：</p>',7),H=n("li",null,"点击事件触发时，获取下级地图的经纬度范围",-1),K={href:"https://echarts.apache.org/zh/api.html#echartsInstance.setOption",target:"_blank",rel:"noopener noreferrer"},R=n("code",null,"boundingCoords",-1),W=n("code",null,"boundingCoords",-1),X=n("li",null,[s("此时，L1、L2 的 "),n("code",null,"boundingCoords"),s(" 相同，在经纬度范围相同的情况下，两个图层看起来就是“完整”的，这个完整性是由 GeoJSON 这一数据来保证的")],-1),$=n("h3",{id:"细节",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#细节","aria-hidden":"true"},"#"),s(" 细节")],-1),nn=n("h4",{id:"怎么获取下级地图的经纬度范围",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#怎么获取下级地图的经纬度范围","aria-hidden":"true"},"#"),s(" 怎么获取下级地图的经纬度范围？")],-1),sn=n("p",null,"echarts 没有直接的 API 可以帮助我们计算这一范围，过程会比较曲线救国",-1),an=n("p",null,[s("之前提到了 "),n("code",null,"boundingCoords"),s(" 的默认值为 GeoJSON 的经纬度范围，可以利用这个默认值来达成目的：")],-1),tn=n("li",null,"先用下级地图的 GeoJSON 更新 L2",-1),en={href:"https://echarts.apache.org/zh/api.html#echartsInstance.convertFromPixel",target:"_blank",rel:"noopener noreferrer"},on=n("li",null,[s("将当前地图容器的左上角、右下角两点传给 "),n("code",null,"convertFromPixel"),s("，可以得到代表经纬度的两点")],-1),pn=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>myChart<span class="token punctuation">.</span><span class="token function">convertFromPixel</span><span class="token punctuation">(</span><span class="token string">&#39;geo&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
myChart<span class="token punctuation">.</span><span class="token function">convertFromPixel</span><span class="token punctuation">(</span><span class="token string">&#39;geo&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1200</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>转化为 <code>boundingCoords</code> 格式即可</li></ol><div class="custom-container warning"><p class="custom-container-title">注意</p><p>这一方法在数据精准度上存在问题，更准确的方法请参考 <a href="#%E6%80%8E%E4%B9%88%E6%A0%B9%E6%8D%AE-geojson-%E8%AE%A1%E7%AE%97%E7%BB%8F%E7%BA%AC%E5%BA%A6%E8%8C%83%E5%9B%B4">怎么根据 GeoJSON 计算经纬度范围</a></p></div><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3><br>`,5),cn=n("iframe",{style:{border:"1px solid rgba(0, 0, 0, 0.1)","border-radius":"2px"},width:"800",height:"450",src:"https://codesandbox.io/p/sandbox/liang-ceng-di-tu-shi-ge-lie-de-zen-me-rang-ta-men-xian-de-wan-zheng-jcdkxm?embed=1",allowfullscreen:""},null,-1),ln=n("h2",{id:"地图虽然完整了-但是下钻前后的变化显得很突兀",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#地图虽然完整了-但是下钻前后的变化显得很突兀","aria-hidden":"true"},"#"),s(" 地图虽然完整了，但是下钻前后的变化显得很突兀")],-1),un=n("p",null,"我们可以通过添加下钻动画的方式解决这一问题，地图下钻动画是一种在地图上进行层级逐渐深入展示的动画效果，相比添加动画之前，可以让用户从宏观的视角逐步进入到细节的层面，而不会感到突兀。",-1),rn=n("h3",{id:"方案-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#方案-1","aria-hidden":"true"},"#"),s(" 方案")],-1),dn={href:"https://greensock.com/get-started/",target:"_blank",rel:"noopener noreferrer"},kn=e(`<ol><li>确定动画执行时机</li><li>确定动画关键属性：<code>boundingCoords</code></li><li>确定动画的起点、终点（即关键帧渲染，更复杂的动画会有更多的关键帧）</li><li>集成 gsap，使用 <code>gsap.to()</code> 补齐中间帧，并配置动画时间、缓动函数等</li></ol><h3 id="细节-1" tabindex="-1"><a class="header-anchor" href="#细节-1" aria-hidden="true">#</a> 细节</h3><h4 id="怎么确定动画执行时机" tabindex="-1"><a class="header-anchor" href="#怎么确定动画执行时机" aria-hidden="true">#</a> 怎么确定动画执行时机</h4><p>首先，下钻动画显然是在点击事件触发后执行，但是还有一些细节问题要考虑：</p><p>在上一小节中，点击事件处理函数的执行顺序为：</p><ol><li>渲染下级地图</li><li>统一两个图层的 <code>boundingCoords</code></li></ol><p>其中，第 1 步是获取下级地图经纬度范围的前置步骤，第 2 步是通过调整缩放比例和中心点让两层地图显得完整。</p><p>在加入下钻动画后，第 2 步变成了动画的终点，可以去掉，执行顺序更新为：</p><ol><li>渲染下级地图</li><li>播放下钻动画</li></ol><p>这个顺序看起来没有问题，只要两个步骤之间执行的间隔时间不超过一帧，用户应该不会感知到第一步的存在，但是经过实际测试后发现，echarts 的 <code>setOption</code> 即使是同步执行上述步骤，第一步也会明显的被观察到，在视觉上产生闪烁的效果。</p><p>看起来有两个思路可以绕过或解决这一问题：</p><ol><li>想办法让用户感知不到渲染下级地图这一过程，我们可以将地图区域和描边颜色改为透明，直到开始执行动画时再恢复</li><li>不再依赖 echarts API 获取下级地图经纬度范围，而是改为通过对下级地图 GeoJSON 中的地域边界坐标分别求最大最小值，来计算出经纬度范围</li></ol><p>实际测试下来，两个思路都可以解决问题，但是第一个思路从点击事件触发到动画开始之间有一小段延迟，而第二个思路则不会，给用户带来的反馈速度更快，用户体验更顺畅，所以本节的示例演示了第二个思路的实现方式。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>虽然 GeoJSON 中的边界坐标可能数量上千，但是计算对性能的消耗并不大，因为计算频率不高，如果想要优化，还可以缓存计算结果</p></div><h4 id="怎么确定动画的起点" tabindex="-1"><a class="header-anchor" href="#怎么确定动画的起点" aria-hidden="true">#</a> 怎么确定动画的起点？</h4><p>为了保证用户在点击某一区块前后不会在视觉上感觉到突兀的变化，下钻动画的第一帧应该是这样的：</p><ul><li>保持点击前的缩放比例和中心点不变</li><li>在 L2 上渲染下级地图</li><li>保证 L1 和 L2 的 <code>boundingCoords</code> 是一致的</li></ul><p>假设当前展示的为湖北省地图，点击武汉后，下钻动画的第一帧效果如下：</p><p><img src="https://i.imgur.com/YavpzOF.png" alt="YavpzOF"></p><p>第一帧对应的 Option 如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">geo</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">map</span><span class="token operator">:</span> <span class="token string">&#39;武汉&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// 由湖北省 GeoJSON 计算得出</span>
      <span class="token literal-property property">boundingCoords</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">108.366964</span><span class="token punctuation">,</span> <span class="token number">33.275616</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">116.135188</span><span class="token punctuation">,</span> <span class="token number">29.029488</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token comment">// 由湖北省 GeoJSON 计算得出</span>
      <span class="token literal-property property">boundingCoords</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">108.366964</span><span class="token punctuation">,</span> <span class="token number">33.275616</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">116.135188</span><span class="token punctuation">,</span> <span class="token number">29.029488</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="怎么根据-geojson-计算经纬度范围" tabindex="-1"><a class="header-anchor" href="#怎么根据-geojson-计算经纬度范围" aria-hidden="true">#</a> 怎么根据 GeoJSON 计算经纬度范围</h4><div class="custom-container tip"><p class="custom-container-title">根据 GeoJSON 计算经纬度范围的算法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">calcBoundingCoords</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">geoJsonData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> boundingCoords <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token number">Infinity</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">,</span> <span class="token number">Infinity</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
  geoJsonData<span class="token punctuation">.</span>features<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">feature</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> coordinates <span class="token operator">=</span> feature<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span>coordinates
    coordinates<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>coords<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      coords<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">coord</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        boundingCoords<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>boundingCoords<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> coord<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        boundingCoords<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>boundingCoords<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> coord<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        boundingCoords<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>boundingCoords<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> coord<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        boundingCoords<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>boundingCoords<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> coord<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> boundingCoords
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="怎么确定动画的终点" tabindex="-1"><a class="header-anchor" href="#怎么确定动画的终点" aria-hidden="true">#</a> 怎么确定动画的终点？</h4><p>动画的最后一帧，两个图层的 <code>boundingCoords</code> 应该都设置为武汉市的经纬度范围，效果如下：</p><p><img src="https://i.imgur.com/VhQT7Fq.png" alt="VhQT7Fq"></p><p>对应的 Option 如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">geo</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">map</span><span class="token operator">:</span> <span class="token string">&#39;武汉&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// 由武汉市 GeoJSON 计算得出</span>
      <span class="token literal-property property">boundingCoords</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">113.702281</span><span class="token punctuation">,</span> <span class="token number">31.36126</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">115.082378</span><span class="token punctuation">,</span> <span class="token number">29.969132</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token comment">// 由武汉市 GeoJSON 计算得出</span>
      <span class="token literal-property property">boundingCoords</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">113.702281</span><span class="token punctuation">,</span> <span class="token number">31.36126</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">115.082378</span><span class="token punctuation">,</span> <span class="token number">29.969132</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="怎么补齐中间帧" tabindex="-1"><a class="header-anchor" href="#怎么补齐中间帧" aria-hidden="true">#</a> 怎么补齐中间帧</h4>`,29),hn={href:"https://greensock.com/get-started/",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://en.wikipedia.org/wiki/Inbetweening",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://greensock.com/docs/v3/Installation",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://greensock.com/docs/v3/GSAP/gsap.to()",target:"_blank",rel:"noopener noreferrer"},gn=n("code",null,"Object",-1),_n=n("code",null,"boundingCoords",-1),fn=n("code",null,"Object",-1),xn=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> flattenDeep<span class="token punctuation">,</span> values<span class="token punctuation">,</span> pick <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">boundingCoords2Object</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">boundingCoords</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token operator">...</span><span class="token function">flattenDeep</span><span class="token punctuation">(</span>boundingCoords<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">object2BoundingCoords</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
  <span class="token function">values</span><span class="token punctuation">(</span><span class="token function">pick</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">values</span><span class="token punctuation">(</span><span class="token function">pick</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>将起点 <code>target</code> 和终点 <code>vars</code> 作为参数传给 <code>gsap.to()</code>，并在 <code>vars</code> 对象中配置动画时间 <code>duration</code> 和缓动函数 <code>ease</code>，GSAP 会不断修改传入的 <code>target</code> 对象直至动画时间结束，代码如下：</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">playAnimation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token function">boundingCoords2Object</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span>
  <span class="token keyword">const</span> vars <span class="token operator">=</span> <span class="token function">boundingCoords2Object</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span>
  gsap<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>vars<span class="token punctuation">,</span>
    <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ease</span><span class="token operator">:</span> <span class="token string">&#39;power1.inOut&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>通过 <code>onUpdate</code> 回调，将中间帧同步到 echarts option</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">playAnimation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  gsap<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token function">onUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> updatedBoundingCoords <span class="token operator">=</span> <span class="token function">object2BoundingCoords</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">syncToMap</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">,</span> <span class="token literal-property property">boundingCoords</span><span class="token operator">:</span> updatedBoundingCoords <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),yn={class:"custom-container tip"},wn=n("p",{class:"custom-container-title"},"缓动函数（Easing Function）",-1),Cn=n("p",null,"也称为缓动曲线（Easing Curve）或过渡函数（Transition Function）。它是一种数学函数，用于控制动画的变化速度，使动画在开始和结束时更加平滑和自然。缓动函数通常应用于动画的时间轴，以调整动画属性随时间变化的方式。",-1),On={href:"https://greensock.com/docs/v3/Eases",target:"_blank",rel:"noopener noreferrer"},jn=n("h3",{id:"示例-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#示例-1","aria-hidden":"true"},"#"),s(" 示例")],-1),Sn=n("br",null,null,-1),Ln=n("iframe",{style:{border:"1px solid rgba(0, 0, 0, 0.1)","border-radius":"2px"},width:"800",height:"450",src:"https://codesandbox.io/p/sandbox/di-tu-sui-ran-wan-zheng-liao-dan-shi-xia-zuan-qian-hou-de-bian-hua-xian-de-hen-tu-wu-zqqgn9?embed=1",allowfullscreen:""},null,-1),Gn=n("h2",{id:"地图可以下钻了-但是怎么向上回溯呢",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#地图可以下钻了-但是怎么向上回溯呢","aria-hidden":"true"},"#"),s(" 地图可以下钻了，但是怎么向上回溯呢？")],-1),Jn=n("p",null,"与下钻类似，向上回溯依然分为：确定起点、确定终点、使用 GSAP 补齐中间帧这 3 步，唯一的不同是，我们要根据需求将终点从下级地图的经纬度范围，改为湖北省的经纬度范围或是由需求决定的具体行政区划的经纬度范围 。",-1),Nn=n("p",null,"同理，如果你想实现市级与市级之间的切换，也是相同的步骤，修改终点的经纬度范围即可，下面分别演示：",-1),En=n("ul",null,[n("li",null,"下钻：湖北省地图->武汉市地图->洪山区地图"),n("li",null,"回溯：洪山区地图->湖北省地图、武汉市地图->湖北省地图")],-1),zn=n("p",null,"示例如下，下钻后，点击武汉、洪山之外的地块即可回溯至湖北省：",-1),An=n("iframe",{style:{border:"1px solid rgba(0, 0, 0, 0.1)","border-radius":"2px"},width:"800",height:"450",src:"https://codesandbox.io/p/sandbox/xia-zuan-hui-su-wan-zheng-ban-x3pklh?embed=1",allowfullscreen:""},null,-1),Bn=n("h2",{id:"小结",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#小结","aria-hidden":"true"},"#"),s(" 小结")],-1),Pn=n("p",null,"至此，我们已经实现了我们最初的需求，基于 Echarts 以 GeoJSON 的方式实现了离线地图的下钻动画和回溯动画，进一步地，我们还可以从以下方面优化这一动画：",-1),In=n("ul",null,[n("li",null,"控制 GSAP 动画的帧率，优化动画对性能的开销"),n("li",null,"通过调节动画时间和缓动函数，优化动画效果，使动画更平滑或更具戏剧性"),n("li",null,"处理动画过程中，用户更换下钻目标的情况，让用户拥有更大的控制权"),n("li",null,"其他你能想到的点")],-1),Fn=n("p",null,"最后，感谢阅读，欢迎大家对文章进行更新，探讨交流不一样的心得，互相学习，共同进步！",-1);function Dn(qn,Mn){const a=p("ExternalLinkIcon");return c(),i("div",null,[u,r,d,k,h,b,n("ul",null,[n("li",null,[s("echarts 基本用法，参考 "),n("a",m,[s("echarts 快速上手"),t(a)])]),n("li",null,[s("地理坐标系的概念，并且知道什么是 GeoJSON，参考 "),n("a",v,[s("地理坐标系"),t(a)]),s("、"),n("a",g,[s("GeoJSON"),t(a)])])]),_,f,x,n("ol",null,[n("li",null,[n("a",y,[s("DataV"),t(a)])]),n("li",null,[n("a",w,[s("开源项目贡献"),t(a)])]),n("li",null,[n("a",C,[s("高德"),t(a)])])]),O,n("ol",null,[j,n("li",null,[s("使用 "),n("a",S,[s("registerMap"),t(a)]),s(" API 注册地图（向 echarts 提供 GeoJSON）")]),L]),G,J,N,E,n("ol",null,[z,A,n("li",null,[s("注册新的 GeoJSON 并通过 "),n("a",B,[s("setOption"),t(a)]),s(" API 更新地理坐标系（底图会随坐标系一同更新）")])]),P,I,F,D,q,M,V,T,Q,Y,n("p",null,[s("在 echarts 地理坐标系的相关配置中，有一个关键属性叫做 "),n("a",U,[s("boundingCoords"),t(a)])]),Z,n("ol",null,[H,n("li",null,[s("通过 "),n("a",K,[s("setOption"),t(a)]),s(" API 更新 L1 的 "),R,s(" 为 下级地图的经纬度范围，L2 的 "),W,s(" 不需要修改，因为默认值就是下级地图的经纬度范围")]),X]),$,nn,sn,an,n("ol",null,[tn,n("li",null,[s("需要用到 "),n("a",en,[s("convertFromPixel"),t(a)]),s(" API 将像素值转换为逻辑值，第一个参数传坐标系缩写，第二个参数传像素值点")]),on]),pn,cn,ln,un,rn,n("p",null,[s("使用 "),n("a",dn,[s("GSAP"),t(a)]),s(" 制作动画的一般流程：")]),kn,n("p",null,[n("a",hn,[s("GSAP"),t(a)]),s(" 可以根据我们给定的起点和终点，自动计算生成中间帧来实现平滑的过渡，这一过程叫做 "),n("a",bn,[s("补间"),t(a)])]),n("ol",null,[n("li",null,[s("参考 "),n("a",mn,[s("GSAP Installation"),t(a)]),s(" 集成 GSAP")]),n("li",null,[s("由于 "),n("a",vn,[s("gsap.to()"),t(a)]),s(" 接收的参数格式为 "),gn,s("，因此需要将起点和终点的 "),_n,s(" 从二维数组转换为 "),fn,s("，对应算法如下：")])]),xn,n("div",yn,[wn,Cn,n("p",null,[s("GSAP 缓动函数的可选值请参考 "),n("a",On,[s("Eases"),t(a)])])]),jn,Sn,Ln,Gn,Jn,Nn,En,zn,An,Bn,Pn,In,Fn])}const Tn=o(l,[["render",Dn],["__file","map-drill.html.vue"]]);export{Tn as default};
