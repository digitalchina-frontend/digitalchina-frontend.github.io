import{_ as a,o as s,c as n,e}from"./app.cd040b68.js";const p={},t=e(`<h1 id="react-高阶组件-hoc" tabindex="-1"><a class="header-anchor" href="#react-高阶组件-hoc" aria-hidden="true">#</a> React 高阶组件(HOC)</h1><p>高阶组件不是 React API 的一部分，而是一种用来复用组件逻辑而衍生出来的一种技术。</p><h2 id="什么是高阶组件" tabindex="-1"><a class="header-anchor" href="#什么是高阶组件" aria-hidden="true">#</a> 什么是高阶组件</h2><blockquote><p>高阶组件就是一个函数，且该函数接受一个组件作为参数，并返回一个新的组件。基本上，这是从 React 的组成性质派生的一种模式，我们称它们为“纯”组件， 因为它们可以接受任何动态提供的子组件，但它们不会修改或复制其输入组件的任何行为。</p></blockquote><p>简言之, 高阶组件:</p><ul><li>是一个函数</li><li>传入一个组件</li><li>返回一个新组件</li></ul><h2 id="example-给任意组件添加-tooltip" tabindex="-1"><a class="header-anchor" href="#example-给任意组件添加-tooltip" aria-hidden="true">#</a> Example: 给任意组件添加 Tooltip</h2><p>这里通过一个例子演示高阶组件的用法。</p><ol><li>高阶组件核心代码</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">withTooltip</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">Component</span><span class="token operator">:</span> React<span class="token punctuation">.</span>FunctionComponent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token operator">...</span>props <span class="token punctuation">}</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>Flex gap<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Tooltip description<span class="token operator">=</span><span class="token string">&quot;这是提示内容&quot;</span><span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>IconPark type<span class="token operator">=</span><span class="token string">&quot;info&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Tooltip<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Flex<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>传入需要添加 Tooltip 的组件</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> TypographyWithToolTip <span class="token operator">=</span> <span class="token function">withTooltip</span><span class="token punctuation">(</span>Typography<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>使用上一步返回的高阶组件</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>TypographyWithToolTip<span class="token operator">&gt;</span><span class="token number">111</span><span class="token operator">&lt;</span><span class="token operator">/</span>TypographyWithToolTip<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>效果展示:</p><p><img src="https://img-blog.csdnimg.cn/f9653d76f27642bab38d7c07e05cfa0e.png" alt="VScode-DownLoad"></p>`,16),o=[t];function l(c,r){return s(),n("div",null,o)}const d=a(p,[["render",l],["__file","index.html.vue"]]);export{d as default};
