import{_ as a,r as s,o as t,c,a as l,b as e,d as i,e as n}from"./app.cd040b68.js";const d="/assets/fem-easybank-demo-stage-1.0a119526.png",r="/assets/locofy-sb-integration.52db6ead.png",p={},u=l("h1",{id:"locofy-调研",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#locofy-调研","aria-hidden":"true"},"#"),e(" Locofy 调研")],-1),h=l("h2",{id:"调研目的",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#调研目的","aria-hidden":"true"},"#"),e(" 调研目的")],-1),f={class:"custom-container tip"},_=n('<p class="custom-container-title">提示</p><p>Frontend development accelerated with AI</p><p>Turn <code>designs</code> into <code>frontend code</code> for web &amp; mobile. Build <code>full apps</code>, <code>screens</code>, <code>components</code> &amp; <code>design systems</code>!</p><p>Ship products 10x faster with your existing design tools, libraries, tech stack &amp; CI/CD workflows</p>',4),m={href:"https://www.locofy.ai/",target:"_blank",rel:"noopener noreferrer"},y=l("ul",null,[l("li",null,[e("初步调研的目标 "),l("ul",null,[l("li",null,"locofy 的 实操流程"),l("li",null,"locofy 涉及到的相关工作角色及其职责的变化"),l("li",null,"locofy 能干什么以及不能干什么"),l("li",null,"locofy 到底能带来多少效率提升")])])],-1),b=l("h2",{id:"调研报告设计",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#调研报告设计","aria-hidden":"true"},"#"),e(" 调研报告设计")],-1),g={href:"https://www.figma.com/community/file/1238393827801856905",target:"_blank",rel:"noopener noreferrer"},k=l("p",null,[l("img",{src:"https://s3-alpha.figma.com/hub/file/3472998472/29522c29-03c6-4829-b7a9-503d8bf5c63b-cover.png",alt:"Easybank"})],-1),x=l("li",null,[l("p",null,"接下来我利用 locofy 将这个设计稿转换成代码")],-1),v={href:"https://github.com/thecodercoder/fem-easybank",target:"_blank",rel:"noopener noreferrer"},S=l("li",null,[l("p",null,"最后针对本次调研目标, 我会给出我的初步结论")],-1),w=l("h2",{id:"调研报告",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#调研报告","aria-hidden":"true"},"#"),e(" 调研报告")],-1),E=l("ul",null,[l("li",null,"首先我强烈建议你先看看下面的 locofy 官方视频, 这个视频会让你对 locofy 有一个大致的了解")],-1),I=l("iframe",{src:"//player.bilibili.com/player.html?aid=574999995&bvid=BV1pz4y1u7PZ&cid=1239250115&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true"}," ",-1),B=l("h3",{id:"操作步骤",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#操作步骤","aria-hidden":"true"},"#"),e(" 操作步骤")],-1),C=n("<li><p>启动插件</p><p>这个步骤是将 locofy 插件安装到你的设计器里面, 这里我选择的是 figma</p><ul><li>在设计稿中使用 locofy 插件, 启动插件面板</li><li>在 Easybank 案例里面有 3 个 Page, 我选择的是 <code>Page Set</code></li><li>在 Easybank 案例里面有 3 个 Frame 我选择的是 <code>Desktop</code></li></ul></li><li><p>第一个步骤 优化设计 <code>Optimise Design</code></p><p>这个步骤是 代码转换前的预处理, 将 Figma 稿件中不必要的元数据去掉 例如 <code>group</code></p><ul><li><p>这里 locofy 提供了 3 个子优化步骤, 这里我尽可能选择默认的选项, 减少人工的干预</p><ul><li>优化 设计结构 <code>Fix Design Structure</code></li><li>自动布局 <code>Auto Layout</code></li><li>适应不同屏幕大小 <code>handle different screen sizes</code></li></ul></li></ul></li><li><p>第二个步骤 打标签 <code>Tag interactive elements / Tag your layers</code></p><p>这个步骤是为了告诉 locofy 哪些元素是可以交互的, 例如 <code>button</code> <code>input</code> 等等</p><ul><li><p>手动打标签</p></li><li><p>自动打标签 <code>Auto Tag</code></p><p>同样的, 这里我选择自动, 但是实际上你依然需要针对每个标签进行手动确认</p></li></ul></li><li><p>第三个步骤 编辑样式与布局 <code>Edit Style and Layout</code></p><p>暂时省略</p><ul><li>这一步暂时省略</li></ul></li><li><p>第四个步骤 增加动作 <code>Add Actions</code></p><p>暂时省略</p><ul><li>这一步暂时省略</li></ul></li><li><p>第五个步骤 生成代码 <code>Sync to Locofy Builder</code></p><p>这个步骤是生成代码并同步到 locofy 的代码编辑器里面</p><ul><li>这里用的是 <code>NextJS</code> 框架</li><li>样式架构 是 CSS In Module</li><li>识别组件</li></ul></li>",6),L=l("p",null,[e("第六个步骤 同步项目 "),l("code",null,"Sync Project")],-1),P=l("p",null,[e("这个步骤是把 locofy 的代码同步到你的项目里面 这里支持 "),l("code",null,"Github")],-1),A={href:"https://github.com/fancn21th/locofy-demo",target:"_blank",rel:"noopener noreferrer"},T=n(`<li><p>clone 这个仓库到本地</p><ul><li><p>安装依赖包</p></li><li><p>启动</p><ul><li>解决了一个 <code>CSSProperties</code> 无法变异的问题</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>propWidth<span class="token operator">?</span><span class="token operator">:</span> CSSProperties<span class="token punctuation">[</span><span class="token string">&quot;width&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 修改前</span>

propWidth<span class="token operator">?</span><span class="token operator">:</span> React<span class="token punctuation">.</span>CSSProperties<span class="token punctuation">[</span><span class="token string">&quot;width&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 修改后</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li>`,1),D=n('<h3 id="结果初见" tabindex="-1"><a class="header-anchor" href="#结果初见" aria-hidden="true">#</a> 结果初见</h3><p>令人期待的结果来了</p><p><img src="'+d+'" alt="Easybank"></p><p>这里我不做点评直接上最后结论</p><h3 id="初步结论" tabindex="-1"><a class="header-anchor" href="#初步结论" aria-hidden="true">#</a> 初步结论</h3><ul><li>locofy 的 实操流程 <ul><li>整个流程本质上就是在给人工智能打标签做转换</li><li>打标签的过程目前还需要人工干预和确认</li></ul></li><li>locofy 涉及到的相关工作角色及其职责的变化 <ul><li>设计师的产出物需要更加规范化, 以便于 locofy 自动识别</li><li>前端工程师需要熟悉 locofy 的代码生成规则, 才能充分发挥 locofy 的自动化能力</li></ul></li><li>locofy 能干什么以及不能干什么 <ul><li>能 <ul><li>自动识别设计稿中的元素, 并生成对应的代码</li><li>自动纠正设计稿中的元素, 使其符合 locofy 的代码生成规则</li><li>自动识别源代码中的组件, 避免生产代码的重复</li></ul></li><li>不能 <ul><li>它是效率工具, 不是代替人工的工具</li></ul></li></ul></li><li>locofy 到底能带来多少效率提升 <ul><li>从默认的实现效果来看 如果不给予足够的人工干预, locofy 生成的代码是无法直接投入生产 <ul><li>目前看, 主要问题是 响应式, 定位的问题 这些问题都需要人工干预, 但是我相信如果工程师熟悉掌握后, 带来的效率提升是非常可观的</li></ul></li><li>从生成的代码来看, locofy 生成的代码是规范和直观的, 方便工程师理解和维护 <ul><li>代码风格肯定和纯人工编写的代码有差异, 简洁直观死板而有失优雅, 但是方便维护</li><li>AI 提供了组件识别 这样可以避免重复代码</li><li>数据处理代码部分还没有看到官方的方案, 目前来看要人工完成</li></ul></li></ul></li></ul><h4 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h4><p>传统开发, 低代码, 人工智能 他们三者都会在未来的 应用研发领域 各自占据一部分市场</p><ul><li>低代码面向的是 非专业开发人员, 他们可以通过低代码平台快速的搭建出一个应用 但是一旦涉及到定制化的需求, 低代码平台就会显得力不从心</li><li>人工智能面相的是 专业开发人员, 它是效率工具, 但是效率的高低取决于工程师的熟练程度</li><li>传统开发我认为在未来的一段时间内, 仍然是主流, 但是随着人工智能的发展, 传统开发的效率会被人工智能逐渐超越, 这是必然的趋势 <ul><li>这就好比 发生在飞机驾驶舱中的变化, 过去我们看到飞机驾驶舱里面有很多的仪表, 需要飞行员去操作, 但是现在的飞机驾驶舱里面的仪表越来越少, 因为飞行员的工作已经被自动驾驶系统取代了</li></ul></li></ul><h2 id="下一步" tabindex="-1"><a class="header-anchor" href="#下一步" aria-hidden="true">#</a> 下一步</h2><p>深入研究 locofy 的代码生成规则 和 人工干预功能的设计目的详细使用方法</p><h2 id="补充" tabindex="-1"><a class="header-anchor" href="#补充" aria-hidden="true">#</a> 补充</h2><p>在本周的调研最后, 我浏览了文档所有章节, 其中 <code>UI Libraries &amp; Design System</code> 吸引了我的注意, 尤其是 <code>Bring your own storybook components</code> 这一节</p><p>简单来说 在 figma 中, 你可以导入你的组件库, 设计师可以直接把组件库里面的组件拖拽到设计稿中, locofy 会自动识别组件库中的组件, 并生成对应的代码</p><p>这可以说是杀手锏, 现在我最想探索的就剩下 如何处理数据状态了</p><p><img src="'+r+'" alt="storybook integration"></p>',16);function N(V,j){const o=s("ExternalLinkIcon");return t(),c("div",null,[u,h,l("div",f,[_,l("p",null,[e("这段文字摘自 "),l("a",m,[e("locofy"),i(o)]),e(" 官网, 简单来讲 locofy 是一个 设计器插件 它可以将 设计文档直接转换成 前端的代码, 从而提高交付效率")])]),y,b,l("ul",null,[l("li",null,[e("首先我选一个 经典的 网页设计稿 "),l("a",g,[e("Easybank landing page"),i(o)])])]),k,l("ul",null,[x,l("li",null,[l("p",null,[e("基于转换后的代码, 我会对比其 与 知名 IT 博主写的 "),l("a",v,[e(" fem-easybank 源代码"),i(o)]),e(", 分析他们的区别在哪里")])]),S]),w,E,I,B,l("ul",null,[C,l("li",null,[L,P,l("ul",null,[l("li",null,[l("p",null,[e("同步到 我的仓库 "),l("a",A,[e("locofy-demo"),i(o)])])]),T])])]),D])}const F=a(p,[["render",N],["__file","index.html.vue"]]);export{F as default};
