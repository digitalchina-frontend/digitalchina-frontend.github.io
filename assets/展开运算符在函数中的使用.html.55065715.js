import{_ as n,o as a,c as s,e}from"./app.cd040b68.js";const t={},p=e(`<h1 id="展开运算符在函数中的使用" tabindex="-1"><a class="header-anchor" href="#展开运算符在函数中的使用" aria-hidden="true">#</a> 展开运算符在函数中的使用</h1><p>在有可选参数时，把数组作为参数传递，简化代码</p><h2 id="常规传参-不推荐" tabindex="-1"><a class="header-anchor" href="#常规传参-不推荐" aria-hidden="true">#</a> 常规传参（不推荐）</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">oneFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token function">oneFunction</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token string">&#39;haha&#39;</span><span class="token punctuation">)</span> <span class="token comment">//当参数b不需要时，直接传undefined，有点不太好</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用数组传参-推荐" tabindex="-1"><a class="header-anchor" href="#使用数组传参-推荐" aria-hidden="true">#</a> 使用数组传参（推荐）</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">oneFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token function">oneFunction</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token string">&#39;haha&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><p>如果参数较多或者数据比较复杂，用哪种方式会更好呢</p>`,8),c=[p];function o(i,u){return a(),s("div",null,c)}const r=n(t,[["render",o],["__file","展开运算符在函数中的使用.html.vue"]]);export{r as default};
