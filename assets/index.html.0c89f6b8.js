import{_ as p,r as o,o as l,c as i,a as n,b as s,d as t,e}from"./app.cd040b68.js";const r="/images/plop/directory.png",c="/images/plop/plopView.png",u="/images/plop/file.png",d="/images/plop/dataScreenTel.png",k="/images/plop/dataScreenCss.png",v="/images/plop/routerTel.png",m={},b=n("h1",{id:"前端工程化-使用-plop-生成项目模板文件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前端工程化-使用-plop-生成项目模板文件","aria-hidden":"true"},"#"),s(" 前端工程化-使用 plop 生成项目模板文件")],-1),h=n("h2",{id:"概述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#概述","aria-hidden":"true"},"#"),s(" 概述")],-1),g={href:"https://plopjs.com/documentation/#getting-started",target:"_blank",rel:"noopener noreferrer"},y={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FSBoudrias%2FInquirer.js%2F",target:"_blank",rel:"noopener noreferrer"},f={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fhandlebars-lang%2Fhandlebars.js",target:"_blank",rel:"noopener noreferrer"},_=n("li",null,[n("p",null,"作用： 通过自动化工具减少开发中重复代码的书写，从而提高开发效率；")],-1),w=n("li",null,[n("p",null,"优点： 通过命令快速生成代码文件，免去了在项目中的新建文件、复制、粘贴等重复工作。")],-1),x={href:"https://github.com/SBoudrias/Inquirer.js/#question",target:"_blank",rel:"noopener noreferrer"},j=n("li",null,[n("p",null,"应用场景： 日常开发中经常会需要重复创建相同类型的文件，例如每一个 view 页面都会有三个文件(index.vue，index.scss，interface.ts)去组成。如果需要创建一个 view，就要去创建三个文件，并且每一个文件中都要有一些基础代码，这就比较繁琐，而且很难统一每一个文件中基础的代码。Plop 就可以解决这个问题，你只需要通过命令，就可以快速生成 view 模板文件。")],-1),F=e(`<h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><ol><li>安装插件</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>pnpm i plop <span class="token operator">-</span><span class="token constant">D</span>
<span class="token comment">// pnpm install -g plop</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>创建配置文件 plopfile.js</li></ol><p>在项目跟目录下，创建配置文件 plopfile.js，内容如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> viewGenerator <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./plop-templates/view/prompt&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">plop</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  plop<span class="token punctuation">.</span><span class="token function">setGenerator</span><span class="token punctuation">(</span><span class="token string">&#39;view&#39;</span><span class="token punctuation">,</span> viewGenerator<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>plopfile.js 中导出一个函数，该函数接受 plop 对象作为它的第一个参数；plop 对象公开包含 setGenerator(name, config)函数的 plop api 对象。</p><ol start="3"><li>新建模板和脚本命令文件</li></ol><p>在项目根目录下新建文件夹(如<strong>plop-templates</strong>)，放置模板(<strong>view/index.vue</strong>)和脚本命令(<strong>view/prompt.js</strong>)文件;</p><p>目录结构如图：</p><p><img src="`+r+`" alt="image.png"></p><p>view/index.vue 模板如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;{{name}}Container&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>script setup lang<span class="token operator">=</span><span class="token string">&quot;ts&quot;</span> name<span class="token operator">=</span><span class="token string">&quot;{{name}}&quot;</span><span class="token operator">&gt;</span>
    <span class="token keyword">import</span> <span class="token punctuation">{</span> getCurrentInstance<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token punctuation">{</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-router&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span> $Urls<span class="token punctuation">,</span> $Request<span class="token punctuation">,</span> $Modal <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> any<span class="token punctuation">;</span>

    <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">defineExpose</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>style lang<span class="token operator">=</span><span class="token string">&quot;scss&quot;</span> scoped<span class="token operator">&gt;</span>
    @<span class="token keyword">import</span> <span class="token string">&quot;./index.scss&quot;</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>提示：这里的模板内容，大家可以根据自己的项目需求，进行自定义设置 ，主要目的是方便项目整体复用。</p></blockquote><p>view/index.scss 模板如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.{{name}}Container{ }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>router/index.vue 模板如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
    path: &quot;/{{name}}&quot;,
    name: &quot;{{name}}&quot;,
    component: () =&gt; import(&quot;@/views/{{name}}/index.vue&quot;),
    meta: {
         title: &#39;{{menu}}&#39;
    }
 },
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>view/prompt.js 脚本命名如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;新建一个页面&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">prompts</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;页面名称:&#39;</span><span class="token punctuation">,</span>
      <span class="token function">validate</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token string">&#39;请输入页面名称&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;checkbox&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;blocks&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;需要包含什么:&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">choices</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;&lt;template&gt;&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;template&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">checked</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;&lt;script&gt;&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;script&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">checked</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;&lt;style&gt;&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;style&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">checked</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token function">validate</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>value<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;template&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>value<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>value<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token string">&#39;&lt;template&gt;|&lt;script&gt;|&lt;style&gt; 是必须的&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;confirm&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;wantCps&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;你想要给新页面添加组件吗?&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;cpsName&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;组件名称:&#39;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">when</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">answer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 当wantCps为true的时候才会到达这步</span>
        <span class="token keyword">return</span> answer<span class="token punctuation">.</span>wantCps <span class="token comment">// 只有我return true才会这个confirm</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">validate</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token string">&#39;请输入组件名称&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;confirm&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;wantRouter&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;你想要给新页面添加路由吗?&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;menu&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;左侧菜单名称:&#39;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">when</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">answer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> answer<span class="token punctuation">.</span>wantRouter
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">validate</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token string">&#39;请输入菜单名称&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token function-variable function">actions</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;{{camelCase name}}&#39;</span>
    <span class="token keyword">let</span> actions <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">src/views/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/index.vue</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">templateFile</span><span class="token operator">:</span> <span class="token string">&#39;plop-templates/view/index.vue&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">src/views/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/index.scss</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">templateFile</span><span class="token operator">:</span> <span class="token string">&#39;plop-templates/view/index.scss&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">src/views/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/interface.ts</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>

    <span class="token keyword">let</span> cpsName <span class="token operator">=</span> <span class="token string">&#39;{{properCase cpsName}}&#39;</span>
    <span class="token keyword">const</span> cpsItem <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">src/views/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/components/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cpsName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/index.vue</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">templateFile</span><span class="token operator">:</span> <span class="token string">&#39;plop-templates/view/components/index.cps.vue&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">src/views/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/components/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cpsName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/index.scss</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">templateFile</span><span class="token operator">:</span> <span class="token string">&#39;plop-templates/view/components/index.cps.scss&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>

    <span class="token keyword">const</span> routerItem <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;append&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">pattern</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">routes*\\:* \\[</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;src/router/index.ts&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">templateFile</span><span class="token operator">:</span> <span class="token string">&#39;plop-templates/router/index.vue&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;{{name}}&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">menu</span><span class="token operator">:</span> <span class="token string">&#39;{{menu}}&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>wantCps <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>wantRouter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>actions<span class="token punctuation">,</span> <span class="token operator">...</span>cpsItem<span class="token punctuation">,</span> <span class="token operator">...</span>routerItem<span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>wantCps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>actions<span class="token punctuation">,</span> <span class="token operator">...</span>cpsItem<span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>wantRouter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>actions<span class="token punctuation">,</span> <span class="token operator">...</span>routerItem<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> actions
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>设置自定义命令</li></ol><p>在 package.json 添加 script 脚本</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;plop&quot;</span><span class="token operator">:</span> <span class="token string">&quot;plop&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>运行命令</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>pnpm run plop view
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="操作方法和文件生成" tabindex="-1"><a class="header-anchor" href="#操作方法和文件生成" aria-hidden="true">#</a> 操作方法和文件生成</h2><p>输入命令 pnpm run plop view</p><p><img src="`+c+'" alt="image.png"></p><p>生成文件如下：</p><p><img src="'+u+'" alt="image.png"></p><p>dataScreen/index.vue 模板内容如下：</p><p><img src="'+d+'" alt="image.png"></p><p>dataScreen/index.scss 模板样式如下：</p><p><img src="'+k+'" alt="image.png"></p><p>router/index.ts 路由内容如下：</p><p><img src="'+v+'" alt="image.png"></p><h2 id="plofile-api" tabindex="-1"><a class="header-anchor" href="#plofile-api" aria-hidden="true">#</a> Plofile API</h2><p>plopfile api 是由 plop 对象公开的方法的集合，大部分工作都是由 setGenerator 完成的，当然也有很多其他有用的方法 。</p><p><strong>主要方法</strong></p><p>这些是创建 plopfile 时通常使用的方法。</p>',40),C=n("thead",null,[n("tr",null,[n("th",null,"Method"),n("th",null,"Parameters"),n("th",null,"Returns"),n("th",null,"Description")])],-1),q={href:"https://github.com/plopjs/plop#setgenerator",target:"_blank",rel:"noopener noreferrer"},A=n("td",null,"String, GeneratorConfig",-1),S=n("td",null,"PlopGenerator",-1),P=n("td",null,"设定一个生成器",-1),T={href:"https://github.com/plopjs/plop#sethelper",target:"_blank",rel:"noopener noreferrer"},I=n("td",null,"String, Function",-1),B=n("td",null,null,-1),O=n("td",null,"设定一个辅助方法",-1),D={href:"https://github.com/plopjs/plop#setpartial",target:"_blank",rel:"noopener noreferrer"},G=n("td",null,"String, String",-1),$=n("td",null,null,-1),R=n("td",null,"设定一个片段",-1),E={href:"https://github.com/plopjs/plop#setactiontype",target:"_blank",rel:"noopener noreferrer"},N=n("td",null,"String, CustomAction",-1),H=n("td",null,null,-1),M=n("td",null,"注册一个自定义动作类型",-1),V={href:"https://github.com/plopjs/plop#setprompt",target:"_blank",rel:"noopener noreferrer"},U=n("td",null,"String, InquirerPrompt",-1),L=n("td",null,null,-1),Q=n("td",null,"注册一个自定义的提示器类型",-1),z={href:"https://github.com/plopjs/plop/blob/main/plop-load.md",target:"_blank",rel:"noopener noreferrer"},J=n("td",null,"Array[String], Object, Object",-1),K=n("td",null,null,-1),W=n("td",null,"从另一个 plopfile 或 npm 模块加载生成器、辅助类或片段",-1),X=e(`<h3 id="setgenerator" tabindex="-1"><a class="header-anchor" href="#setgenerator" aria-hidden="true">#</a> setGenerator</h3><p>配置对象中 prompts 和 actions 属性，是必须的；description 属性是可选的；prompts 数组会被传递给 inquirer。而 actions 数组是要执行的操作列表。</p><p>示例如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">plop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 创建一个生成器</span>
  plop<span class="token punctuation">.</span><span class="token function">setGenerator</span><span class="token punctuation">(</span><span class="token string">&#39;component&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;新增一个公共组件&#39;</span><span class="token punctuation">,</span> <span class="token comment">//可选；描述，在终端里生成器后面显示的内容</span>
    <span class="token literal-property property">prompts</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 提示，用于捕获用户输入</span>
    <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 行为，具体执行的内容</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>GeneratorConfig 接口</strong></p><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>description</td><td>[String]</td><td></td><td>简短说明生成器的用途</td></tr><tr><td>prompts</td><td>Array[InquirerQuestion]</td><td></td><td>向用户提的问题</td></tr><tr><td>actions</td><td>Array[ActionConfig]</td><td></td><td>可执行的动作</td></tr></tbody></table><h3 id="sethelper" tabindex="-1"><a class="header-anchor" href="#sethelper" aria-hidden="true">#</a> setHelper</h3><p>setHelper 主要用于自定义相应一个工具方法，setHelper 直接对应于 handlebars 方法 registerHelper。</p><p>示例如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">plop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  plop<span class="token punctuation">.</span><span class="token function">setHelper</span><span class="token punctuation">(</span><span class="token string">&#39;upperCase&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> text<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// or in es6/es2015</span>
  plop<span class="token punctuation">.</span><span class="token function">setHelper</span><span class="token punctuation">(</span><span class="token string">&#39;upperCase&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">txt</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> txt<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setpartial" tabindex="-1"><a class="header-anchor" href="#setpartial" aria-hidden="true">#</a> setPartial</h3><p>setPartial 直接对应于 handlebars 的方法方法 registerPartial。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">plop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  plop<span class="token punctuation">.</span><span class="token function">setPartial</span><span class="token punctuation">(</span><span class="token string">&#39;myTitlePartial&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;h1&gt;{{titleCase name}}&lt;/h1&gt;&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// used in template as {{&gt; myTitlePartial }}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="其他方法" tabindex="-1"><a class="header-anchor" href="#其他方法" aria-hidden="true">#</a> 其他方法</h3>`,14),Y={href:"https://github.com/plopjs/plop",target:"_blank",rel:"noopener noreferrer"},Z=n("h2",{id:"plop-api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#plop-api","aria-hidden":"true"},"#"),s(" Plop Api")],-1),nn=n("p",null,"plop 最基本和最核心的内容：prompts 和 actions",-1),sn=n("h3",{id:"prompts",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#prompts","aria-hidden":"true"},"#"),s(" prompts")],-1),an={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FSBoudrias%2FInquirer.js%2F",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://github.com/SBoudrias/Inquirer.js",target:"_blank",rel:"noopener noreferrer"},en=e('<blockquote><p>提示：prompts 数组里的 type 类型：input， number, confirm, list, rawlist, expand, checkbox, password, editor。当然也是支持 inquirer 插件的。</p></blockquote><h3 id="actions" tabindex="-1"><a class="header-anchor" href="#actions" aria-hidden="true">#</a> actions</h3><p>actions 函数配置属性包含：</p><h4 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h4><p>认识：name 用于生成文件或文件夹的名称；</p><p>name 命名规则如下：</p><ol><li>camelCase：将字符串转为驼峰表示法,一般应用于文件夹命名。示例：（changeFormatToThis）</li><li>properCase/pascalCase：单词首字母大写表示法，一般应用于组件文件夹命名。示例：（ChangeFormatToThis）</li><li>lowerCase ：小写表示法 （change format to this）</li><li>snakeCase：下划线表示法(change_format_to_this)</li><li>dashCase/kebaCase：短划线表示法(change-format-to-this)</li><li>dotCase：点语法表示法（change.format.to.this）</li><li>pathCase：路径表示法（change/format/to/this）</li><li>sentenceCase: 整句首字母大写法（Change format to this）</li><li>constantCase: 全部大写下划线连接 （CHANGE_FORMAT_TO_THIS）</li><li>titleCase ：标题表示法 （Change Format To This）</li></ol><h4 id="actionconfig" tabindex="-1"><a class="header-anchor" href="#actionconfig" aria-hidden="true">#</a> ActionConfig</h4><p>属性如下：</p>',9),pn=n("thead",null,[n("tr",null,[n("th",null,"Property"),n("th",null,"Type"),n("th",null,"Default"),n("th",null,"Description")])],-1),on=n("td",null,"type",-1),ln=n("td",null,"String",-1),rn=n("td",null,null,-1),cn={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fplopjs%2Fplop%23add",target:"_blank",rel:"noopener noreferrer"},un={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fplopjs%2Fplop%23modify",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fplopjs%2Fplop%23addmany",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://plopjs.com/documentation/#append",target:"_blank",rel:"noopener noreferrer"},vn=n("td",null,"force",-1),mn=n("td",null,"Boolean",-1),bn=n("td",null,"false",-1),hn={href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fplopjs%2Fplop%23running-a-generator-forcefully",target:"_blank",rel:"noopener noreferrer"},gn=n("tr",null,[n("td",null,"data"),n("td",null,"Object/Function"),n("td",null,"{}"),n("td",null,"指定 action 被执行时需要混入 prompts 答案的数据")],-1),yn=n("tr",null,[n("td",null,"abortOnFail"),n("td",null,"Boolean"),n("td",null,"true"),n("td",null,"当一个 action 由于某种原因执行失败时停止执行之后的所有 action")],-1),fn=n("tr",null,[n("td",null,"skip"),n("td",null,"Function"),n("td"),n("td",null,"一个用于指定当前 action 是否需要被执行的函数")],-1),_n=e(`<blockquote><p>提示：在 ActionConfig 里面，data 属性可以是一个返回普通对象的函数；也可以是一个返回 Promise 对象的函数，但这个 Promise 对象必须 resolve 一个对象 。</p></blockquote><p><strong>内置动作</strong></p><p>您可以在 GeneratorConfig 中使用几种类型的内置动作。您可以指定操作的类型(所有路径都基于 plopfile 的位置)和要使用的模板 。</p><h5 id="add" tabindex="-1"><a class="header-anchor" href="#add" aria-hidden="true">#</a> Add</h5><p>add 动作被用来向你的项目中新增一个文件；</p><p>相关属性如下：</p><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>path</td><td>String</td><td></td><td>指定生成文件的路径。它本身是一个 handlebars 模板，用户输入的文件名称将作为变量嵌入其中</td></tr><tr><td>template</td><td>String</td><td></td><td>被用来创建新文件的 handlebars 模板</td></tr><tr><td>templateFile</td><td>String</td><td></td><td>一个包含模板的文件路径</td></tr><tr><td>skipIfExists</td><td>Boolean</td><td>false</td><td>如果要创建的文件已经存在，则跳过（而非报错）</td></tr><tr><td>transform</td><td>Function</td><td></td><td>一个可选函数，可用于在将文件写入磁盘之前转换模板结果</td></tr><tr><td>skip</td><td>Function</td><td></td><td>继承自 ActionConfig</td></tr><tr><td>force</td><td>Boolean</td><td>false</td><td>继承自 ActionConfig（如果文件存在则覆盖）</td></tr><tr><td>data</td><td>Object</td><td>{}</td><td>继承自 ActionConfig</td></tr><tr><td>abortOnFail</td><td>Boolean</td><td>true</td><td>继承自 ActionConfig</td></tr></tbody></table><h5 id="addmany" tabindex="-1"><a class="header-anchor" href="#addmany" aria-hidden="true">#</a> AddMany</h5><p>addMany 动作可以一次创建多个文件。</p><p>细节：如果您希望添加的文件名是唯一的,则 templateFiles glob 位于的路径可以在它们的文件或文件夹名称中使用 handlebars 语法。</p><p>相关属性如下：</p><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>destination</td><td>String</td><td></td><td>规定新文件要创建到的目录,它是一个 handlebars 模板，意味着该属性中定义的目录路径可以是动态的</td></tr><tr><td>base</td><td>String</td><td></td><td>将文件添加到目标文件夹时，可以排除模板路径的哪些部分</td></tr><tr><td>templateFiles</td><td>Glob</td><td></td><td>匹配要添加的多个模板文件的 glob 模式</td></tr><tr><td>stripExtensions</td><td>[String]</td><td>[&#39;hbs&#39;]</td><td>应从 template 中剥离的文件扩展名在添加到目标时文件名</td></tr><tr><td>globOptions</td><td>Object</td><td></td><td>更改与要添加的模板文件匹配方式的 glob 选项</td></tr><tr><td>verbose</td><td>Boolean</td><td>true</td><td>打印每个成功添加的文件路径</td></tr><tr><td>transform</td><td>Function</td><td></td><td>一个可选函数，可用于在将文件写入磁盘之前转换模板结果</td></tr><tr><td>skip</td><td>Function</td><td></td><td>继承自 ActionConfig</td></tr><tr><td>skipIfExists</td><td>Boolean</td><td>false</td><td>继承自 add(如果文件存在，则跳过)</td></tr><tr><td>force</td><td>Boolean</td><td>false</td><td>继承自 ActionConfig（如果文件存在则覆盖）</td></tr><tr><td>data</td><td>Object</td><td>{}</td><td>继承自 ActionConfig</td></tr><tr><td>abortOnFail</td><td>Boolean</td><td>true</td><td>继承自 ActionConfig</td></tr></tbody></table><h5 id="modify" tabindex="-1"><a class="header-anchor" href="#modify" aria-hidden="true">#</a> Modify</h5><p>modify 修改动作将使用 pattern 属性进行匹配，从而修改或替换指定路径(path)下的文件。</p><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>path</td><td>String</td><td></td><td>要修改的文件的路径（是一个 handlebars 模板）</td></tr><tr><td>pattern</td><td>RegExp</td><td>end‑of‑file</td><td>一个正则表达式，用来匹配需要被替换的文本</td></tr><tr><td>template</td><td>String</td><td></td><td>一个 handlebars 模板，用它取代所匹配的模式。捕获组的值有$1、$2 等</td></tr><tr><td>templateFile</td><td>String</td><td></td><td>是一个包含模板的路径</td></tr><tr><td>transform</td><td>Function</td><td></td><td>一个可选函数，可用于在将文件写入磁盘之前转换模板结果</td></tr><tr><td>skip</td><td>Function</td><td></td><td>继承自 ActionConfig</td></tr><tr><td>data</td><td>Object</td><td>{}</td><td>继承自 ActionConfig</td></tr><tr><td>abortOnFail</td><td>Boolean</td><td>true</td><td>继承自 ActionConfig</td></tr></tbody></table><h5 id="append" tabindex="-1"><a class="header-anchor" href="#append" aria-hidden="true">#</a> Append</h5><p>append  追加操作是一个常用功能，它是 modify 接口的子集。它用于将数据追加到文件中的特定位置。</p><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>path</td><td>String</td><td></td><td>需要被修改的文件路径（是一个 handlebars 模板）</td></tr><tr><td>pattern</td><td>RegExp, String</td><td></td><td>一个正则表达式，用于匹配附加文本的正则表达式</td></tr><tr><td>unique</td><td>Boolean</td><td>true</td><td>是否删除相同的项</td></tr><tr><td>separator</td><td>String</td><td>new line</td><td>分割符</td></tr><tr><td>template</td><td>String</td><td></td><td>用于入口的 handlebars 模板</td></tr><tr><td>templateFile</td><td>String</td><td></td><td>是一个包含模板的路径</td></tr><tr><td>data</td><td>Object</td><td>{}</td><td>继承自 ActionConfig</td></tr><tr><td>abortOnFail</td><td>Boolean</td><td>true</td><td>继承自 ActionConfig</td></tr></tbody></table><h3 id="动态-actions" tabindex="-1"><a class="header-anchor" href="#动态-actions" aria-hidden="true">#</a> 动态 actions</h3><p>如果 actions 需要根据 prompts 的 answer 来决定，那么可以使用动态 actions</p><p>示例如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">plop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    plop<span class="token punctuation">.</span><span class="token function">setGenerator</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">prompts</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;confirm&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;wantTacos&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Do you want tacos?&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token function-variable function">actions</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> actions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>wantTacos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                actions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;folder/{{dashCase name}}.txt&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">templateFile</span><span class="token operator">:</span> <span class="token string">&#39;templates/tacos.txt&#39;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                actions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;folder/{{dashCase name}}.txt&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">templateFile</span><span class="token operator">:</span> <span class="token string">&#39;templates/burritos.txt&#39;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> actions<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="源码地址" tabindex="-1"><a class="header-anchor" href="#源码地址" aria-hidden="true">#</a> 源码地址</h2>`,23),wn={href:"https://github.com/wdlhao/vue3-plop",target:"_blank",rel:"noopener noreferrer"},xn=n("h2",{id:"参考资料",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考资料","aria-hidden":"true"},"#"),s(" 参考资料")],-1),jn={href:"https://plopjs.com/documentation/#getting-started",target:"_blank",rel:"noopener noreferrer"},Fn={href:"https://github.com/SBoudrias/Inquirer.js#objects",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://handlebarsjs.com/guide/expressions.html",target:"_blank",rel:"noopener noreferrer"};function qn(An,Sn){const a=o("ExternalLinkIcon");return l(),i("div",null,[b,h,n("ul",null,[n("li",null,[n("p",null,[s("认识： "),n("a",g,[s("plop"),t(a)]),s(" 是一个微型生成器框架，用于生成符合团队规范的模板文件。它是  "),n("a",y,[s("inquirer"),t(a)]),s("对话框 和  "),n("a",f,[s("hanldebar"),t(a)]),s("模版的简单融合。")])]),_,w,n("li",null,[n("p",null,[s("细节： plop.js 的终端交互使用了"),n("a",x,[s("Inquirer.js"),t(a)]),s("，所以也可以使用 inquirer 的插件对其功能进行扩展。")])]),j]),F,n("table",null,[C,n("tbody",null,[n("tr",null,[n("td",null,[n("a",q,[s("setGenerator"),t(a)])]),A,S,P]),n("tr",null,[n("td",null,[n("a",T,[s("setHelper"),t(a)])]),I,B,O]),n("tr",null,[n("td",null,[n("a",D,[s("setPartial"),t(a)])]),G,$,R]),n("tr",null,[n("td",null,[n("a",E,[s("setActionType"),t(a)])]),N,H,M]),n("tr",null,[n("td",null,[n("a",V,[s("setPrompt"),t(a)])]),U,L,Q]),n("tr",null,[n("td",null,[n("a",z,[s("load"),t(a)])]),J,K,W])])]),X,n("p",null,[s("其他的方法，如 setPartial、setActionType、setPrompt、load 等等，具体用法，大家可以参见"),n("a",Y,[s("官网"),t(a)]),s("介绍；")]),Z,nn,sn,n("p",null,[s("prompts 即是  "),n("a",an,[s("inquirer"),t(a)]),s("的 prompts，更多配置可参考"),n("a",tn,[s("inquirer"),t(a)]),s("文档。")]),en,n("table",null,[pn,n("tbody",null,[n("tr",null,[on,ln,rn,n("td",null,[s("action 的类型(包括 "),n("a",cn,[s("add"),t(a)]),s(", "),n("a",un,[s("modify"),t(a)]),s(", "),n("a",dn,[s("addMany"),t(a)]),s(","),n("a",kn,[s("Append"),t(a)]),s(")")])]),n("tr",null,[vn,mn,bn,n("td",null,[n("a",hn,[s("强制执行"),t(a)]),s("(不同的 action 类型会对应不同的逻辑)")])]),gn,yn,fn])]),_n,n("ul",null,[n("li",null,[n("a",wn,[s("本项目(vue3-plop)源码地址"),t(a)])])]),xn,n("ol",null,[n("li",null,[n("a",jn,[s("plopjs "),t(a)])]),n("li",null,[n("a",Fn,[s("Inquirer.js"),t(a)])]),n("li",null,[n("a",Cn,[s("handlebarsjs"),t(a)])])])])}const Tn=p(m,[["render",qn],["__file","index.html.vue"]]);export{Tn as default};
